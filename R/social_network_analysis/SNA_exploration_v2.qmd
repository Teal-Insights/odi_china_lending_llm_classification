---
title: "Chinese Co-Financing Network Analysis"
author: "Teal Emery"
format: 
  html:
    code-fold: true
    toc: true
    toc-depth: 3
    fig-width: 10
    fig-height: 8
  pdf:
    toc: true
    toc-depth: 3
    fig-width: 8
    fig-height: 6
editor: visual
---

```{r setup, include=FALSE}
# Load required libraries
library(tidyverse)   # For data manipulation
library(tidygraph)   # For network objects and centrality measures
library(ggraph)      # For network visualizations
library(here)        # Relative paths
library(ggrepel)     # Repelled text labels
library(igraph)      # For additional network metrics
library(patchwork)   # For combining plots
library(kableExtra)  # For nicer tables

# Set options
options(scipen = 999)  # Avoid scientific notation
set.seed(12345)        # Set seed for reproducible network layouts
```

## Introduction

This analysis explores the structure of co-financing networks in China's overseas development finance, with a particular focus on how these networks differ between conventional financing and green projects. Using social network analysis (SNA), we investigate which financial institutions play central roles in different types of project financing, and how their relative prominence changes across different sectors.

A key question we explore is: **Do green projects rely on different institutional networks compared to traditional Belt and Road financing?** Understanding these network structures provides insight into the mechanisms through which China's financial institutions balance risk management with their mandate to support green development.

## Data Loading and Preparation

We first load the prepared dataset containing transaction-level co-financing information.

```{r data-loading}
sna_data_nested <- read_rds(
  here(
    "data",
    "social_network_analysis",
    "data_for_social_network_analysis.rds"
  )
)

# Unnest the data to get all unique lender combinations
data_for_sna <- sna_data_nested |> 
  unnest(unique_lenders) |> 
  unique()

# Quick overview of the data structure
glimpse(data_for_sna)
```

The dataset contains transaction-level information with the following key variables:

- `transaction_id`: Unique identifier for each financing transaction
- `standardized_lender_name`: Harmonized names of lending institutions
- `lender_geography`: Whether the lender is Chinese or non-Chinese
- `lender_profit_orientation`: Categorized as "Profit Maximizing," "Mixed Mandate," or "Policy Driven"
- `transaction_primary_class`: Classification of transactions (e.g., "GREEN", "BROWN", "GREY")

## Network Analysis Functions

The following functions form the core of our network analysis, enabling us to construct and visualize co-financing relationships.

### Building Co-Financing Networks

```{r network-building-function}
#| code-fold: show

# ------------------------------------------------------------------------------
# Function: build_cofinancing_network
#
# Constructs a co-financing network graph from transaction data.
#
# Arguments:
#   data              - The processed dataset
#   transaction_class - (Optional) Filter to specific transaction type (e.g., "GREEN")
#   top_n             - Number of top nodes (by degree) to retain
#   min_collabs       - Minimum number of collaborations required for an edge
#
# Returns:
#   A tidygraph object with nodes (lenders) and edges (co-financing relationships)
# ------------------------------------------------------------------------------
build_cofinancing_network <- function(data, transaction_class = NULL, top_n = 50, min_collabs = 2) {
  
  # Optionally filter to a specific transaction class
  if (!is.null(transaction_class)) {
    data <- data |> filter(transaction_primary_class == transaction_class)
  }
  
  # Create edge list
  edges <- data |>
    select(transaction_id, standardized_lender_name) |>
    distinct() |>
    group_by(transaction_id) |>
    # Only consider transactions with at least 2 lenders
    filter(n() >= 2) |>
    summarise(
      pairs = list(combn(standardized_lender_name, 2, simplify = FALSE)),
      .groups = "drop"
    ) |>
    unnest(pairs) |>
    mutate(
      from = map_chr(pairs, 1),
      to   = map_chr(pairs, 2)
    ) |>
    select(from, to) |>
    # Ensure edge is undirected by sorting lender names
    mutate(
      from = pmin(from, to),
      to   = pmax(from, to)
    ) |>
    group_by(from, to) |>
    summarise(weight = n(), .groups = "drop")
  
  # Build node data
  nodes <- data |>
    distinct(standardized_lender_name, lender_geography, lender_core_type, lender_profit_orientation)
  
  # Create tidygraph object (undirected network)
  graph <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
  
  # Compute centrality measures
  graph <- graph |>
    mutate(
      degree      = centrality_degree(),
      betweenness = centrality_betweenness(),
      closeness   = centrality_closeness()
    )
  
  # Filter to top_n nodes by degree
  node_data <- graph |> activate(nodes) |> as_tibble()
  top_lenders <- node_data |>
    arrange(desc(degree)) |>
    slice_head(n = top_n)
  
  graph_filtered <- graph |>
    activate(nodes) |>
    filter(standardized_lender_name %in% top_lenders$standardized_lender_name) |>
    convert(to_subgraph)
  
  # Filter edges by minimum collaborations
  graph_filtered <- graph_filtered |>
    activate(edges) |>
    filter(weight >= min_collabs) |>
    convert(to_subgraph)
  
  return(graph_filtered)
}

# Function to create a full network without top_n filtering (for quantitative analysis)
build_cofinancing_network_full <- function(data, transaction_class = NULL, min_collabs = 2) {
  
  # Optionally filter to a specific transaction class
  if (!is.null(transaction_class)) {
    data <- data |> filter(transaction_primary_class == transaction_class)
  }
  
  # Create edge list
  edges <- data |>
    select(transaction_id, standardized_lender_name) |>
    distinct() |>
    group_by(transaction_id) |>
    filter(n() >= 2) |>
    summarise(
      pairs = list(combn(standardized_lender_name, 2, simplify = FALSE)),
      .groups = "drop"
    ) |>
    unnest(pairs) |>
    mutate(
      from = map_chr(pairs, 1),
      to   = map_chr(pairs, 2)
    ) |>
    select(from, to) |>
    mutate(
      from = pmin(from, to),
      to   = pmax(from, to)
    ) |>
    group_by(from, to) |>
    summarise(weight = n(), .groups = "drop")
  
  # Build node data
  nodes <- data |>
    distinct(standardized_lender_name, lender_geography, lender_core_type, lender_profit_orientation)
  
  # Create tidygraph object
  graph <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
  
  # Compute centrality measures
  graph <- graph |>
    mutate(
      degree      = centrality_degree(),
      betweenness = centrality_betweenness(),
      closeness   = centrality_closeness()
    )
  
  # Filter edges by minimum collaborations
  graph_full <- graph |>
    activate(edges) |>
    filter(weight >= min_collabs) |>
    convert(to_subgraph)
  
  return(graph_full)
}
```

### Visualizing Networks

```{r plotting-function}
#| code-fold: show

# ------------------------------------------------------------------------------
# Function: plot_network
#
# Visualizes a tidygraph network object with customized aesthetics.
#
# Node Aesthetics:
#   - Color: by lender_geography/profit orientation
#   - Shape: by lender_profit_orientation
#   - Size: by degree centrality
#
# Edge Aesthetics:
#   - Width: proportional to number of collaborations (weight)
#
# ------------------------------------------------------------------------------
plot_network <- function(graph, title = "Co-Financing Network", repel_force = 1) {
  
  # Create a combined label for coloring
  graph <- graph |>
    activate(nodes) |>
    mutate(
      lender_color_label = if_else(
        lender_geography == "Chinese",
        "Chinese",
        paste0("Non-Chinese: ", lender_profit_orientation)
      )
    )
  
  # Define custom color and shape mappings
  color_values <- c(
    "Chinese" = "#E41A1C",  # Brighter red
    "Non-Chinese: Profit Maximizing" = "#377EB8",  # Blue
    "Non-Chinese: Mixed Mandate"     = "#984EA3",  # Purple
    "Non-Chinese: Policy Driven"     = "#4DAF4A"   # Green
  )
  
  shape_values <- c(
    "Profit Maximizing" = 16,  # circle
    "Mixed Mandate"     = 17,  # triangle
    "Policy Driven"     = 18,  # diamond
    "Uncategorized"     = 15   # square
  )
  
  # Set seed for reproducible layout
  set.seed(42)
  
  # Create the network plot with a force-directed layout
  p <- ggraph(graph, layout = "fr") +
    # Draw edges with enhanced visibility
    geom_edge_link(
      aes(width = weight, alpha = weight),
      color = "gray40", 
      lineend = "round"
    ) +
    # Draw nodes
    geom_node_point(
      aes(
        color = lender_color_label, 
        shape = lender_profit_orientation, 
        size = degree
      ),
      stroke = 0.5
    ) +
    # Add repelled text labels
    geom_node_text(
      aes(label = standardized_lender_name), 
      repel = TRUE, 
      size = 3.2,
      fontface = "bold",
      bg.color = "white",
      bg.r = 0.15,
      force = repel_force,
      max.overlaps = 30
    ) +
    # Apply manual scales
    scale_color_manual(values = color_values) +
    scale_shape_manual(values = shape_values) +
    scale_edge_width(range = c(0.5, 2.5)) +
    scale_edge_alpha(range = c(0.4, 0.9)) +
    # Labels
    labs(
      title = title,
      color = "Lender Type",
      shape = "Profit Orientation",
      size = "Degree Centrality"
    ) +
    # Theme
    theme_void() +
    theme(
      plot.title = element_text(hjust = 0.5, face = "bold", size = 14),
      plot.subtitle = element_text(hjust = 0.5),
      legend.position = "right",
      legend.title = element_text(face = "bold"),
      plot.margin = margin(10, 10, 10, 10)
    )
  
  return(p)
}
```

## Overall Co-Financing Network Analysis

We first examine the overall co-financing network, which includes all transaction types.

```{r overall-network}
# Build the overall network visualization
network_overall <- build_cofinancing_network(
  data_for_sna,
  top_n = 20,
  min_collabs = 1
)

# Visualize the overall network
p_overall <- plot_network(
  network_overall, 
  title = "Overall Co-Financing Network: Top 20 Institutions"
)

# Display the plot
print(p_overall)
```

In the overall co-financing network, we observe:

1. Chinese commercial banks (particularly Bank of China and ICBC) occupy central positions, indicating their prominence in co-financing transactions.
2. Several major international commercial banks (like Standard Chartered and BNP Paribas) are also central.
3. The network appears well-integrated, with multiple connections between Chinese and non-Chinese institutions.

### Top Lenders in Overall Network

```{r overall-top-lenders}
# Extract centrality measures from the overall network
top_lenders_overall <- network_overall |>
  activate(nodes) |>
  as_tibble() |>
  select(standardized_lender_name, lender_geography, lender_profit_orientation, 
         degree, betweenness, closeness) |>
  arrange(desc(degree))

# Display the top 10 lenders by degree centrality
top_lenders_overall |>
  slice_head(n = 10) |>
  kable(
    caption = "Top 10 Lenders by Degree Centrality (Overall Network)",
    col.names = c("Lender", "Geography", "Profit Orientation", 
                 "Degree", "Betweenness", "Closeness"),
    digits = c(0, 0, 0, 0, 2, 3)
  ) |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
```

## Green Co-Financing Network Analysis

Now we examine the network structure specifically for green projects.

```{r green-network}
# Build the green network
network_green <- build_cofinancing_network(
  data_for_sna, 
  transaction_class = "GREEN", 
  top_n = 20, 
  min_collabs = 1
)

# Visualize the green network
p_green <- plot_network(
  network_green, 
  title = "Green Projects Co-Financing Network: Top 20 Institutions",
  repel_force = 1.2
)

# Display the plot
print(p_green)
```

The green co-financing network displays notable differences from the overall network:

1. Public development banks (PDBs) such as KfW, AFD, and the African Development Bank play much more prominent roles.
2. The network structure appears more bifurcated, with distinct clusters forming around policy-oriented institutions versus commercial banks.
3. Chinese commercial banks (ICBC and Bank of China) remain important but take on a "bridging" role between policy and commercial clusters.

### Top Lenders in Green Network

```{r green-top-lenders}
# Extract centrality measures from the green network
top_lenders_green <- network_green |>
  activate(nodes) |>
  as_tibble() |>
  select(standardized_lender_name, lender_geography, lender_profit_orientation, 
         degree, betweenness, closeness) |>
  arrange(desc(degree))

# Display the top 10 lenders by degree centrality
top_lenders_green |>
  slice_head(n = 10) |>
  kable(
    caption = "Top 10 Lenders by Degree Centrality (Green Network)",
    col.names = c("Lender", "Geography", "Profit Orientation", 
                 "Degree", "Betweenness", "Closeness"),
    digits = c(0, 0, 0, 0, 2, 3)
  ) |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
```

## Comparative Network Analysis

To rigorously compare the overall and green networks, we calculate network metrics for both and examine differences in centrality by lender type.

```{r comparative-analysis}
# Build full networks for quantitative comparison
network_overall_full <- build_cofinancing_network_full(data_for_sna, min_collabs = 1)
network_green_full <- build_cofinancing_network_full(data_for_sna, transaction_class = "GREEN", min_collabs = 1)

# Add constraint metric to green network
network_green_igraph <- as.igraph(network_green_full)
V(network_green_igraph)$constraint <- constraint(network_green_igraph)

# Add constraint back to tidygraph object
network_green_full <- network_green_full |>
  activate(nodes) |>
  mutate(constraint = V(network_green_igraph)$constraint)

# Normalize centrality measures in the green network
network_green_full <- network_green_full |>
  activate(nodes) |>
  mutate(
    norm_degree = degree / (n() - 1),
    norm_betweenness = betweenness / max(betweenness, na.rm = TRUE)
  )

# Extract centrality data
centrality_overall_full <- network_overall_full |>
  activate(nodes) |>
  as_tibble() |>
  select(standardized_lender_name, lender_geography, lender_profit_orientation, 
         degree, betweenness, closeness)

centrality_green_full <- network_green_full |>
  activate(nodes) |>
  as_tibble() |>
  select(standardized_lender_name, lender_geography, lender_profit_orientation, 
         degree, betweenness, closeness, constraint, norm_degree, norm_betweenness)

# Summarize by profit orientation and geography
avg_centrality_overall <- centrality_overall_full |>
  group_by(lender_profit_orientation, lender_geography) |>
  summarise(
    avg_degree = mean(degree, na.rm = TRUE),
    avg_betweenness = mean(betweenness, na.rm = TRUE),
    avg_closeness = mean(closeness, na.rm = TRUE),
    count_overall = n(),
    .groups = "drop"
  )

avg_centrality_green <- centrality_green_full |>
  group_by(lender_profit_orientation, lender_geography) |>
  summarise(
    avg_degree = mean(degree, na.rm = TRUE),
    avg_betweenness = mean(betweenness, na.rm = TRUE),
    avg_closeness = mean(closeness, na.rm = TRUE),
    avg_constraint = mean(constraint, na.rm = TRUE),
    avg_norm_degree = mean(norm_degree, na.rm = TRUE),
    avg_norm_betweenness = mean(norm_betweenness, na.rm = TRUE),
    count_green = n(),
    .groups = "drop"
  )

# Merge for comparison
avg_centrality_comparison <- avg_centrality_overall |>
  left_join(avg_centrality_green, by = c("lender_profit_orientation", "lender_geography"))
```

### Centrality Comparison by Lender Type

```{r centrality-comparison-table}
# Create a focused comparison table
centrality_comparison_table <- avg_centrality_comparison |>
  select(
    lender_profit_orientation,
    lender_geography,
    count_overall,
    count_green,
    avg_degree.x,
    avg_degree.y,
    avg_constraint
  ) |>
  rename(
    "Profit Orientation" = lender_profit_orientation,
    "Geography" = lender_geography,
    "Count (Overall)" = count_overall,
    "Count (Green)" = count_green,
    "Avg Degree (Overall)" = avg_degree.x,
    "Avg Degree (Green)" = avg_degree.y,
    "Avg Constraint (Green)" = avg_constraint
  )

# Display the comparison table
centrality_comparison_table |>
  kable(
    caption = "Network Centrality Comparison by Lender Type",
    digits = c(0, 0, 0, 0, 1, 1, 3)
  ) |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
```

### Visualizing Centrality Differences

```{r centrality-visualization}
# Prepare data for visualization
centrality_plot_data <- avg_centrality_green |>
  mutate(lender_category = paste(lender_geography, lender_profit_orientation, sep = ": "))

# Create a bar chart of normalized degree by lender type
ggplot(centrality_plot_data, 
       aes(x = reorder(lender_category, avg_norm_degree), 
           y = avg_norm_degree, 
           fill = lender_geography)) +
  geom_col() +
  coord_flip() +
  labs(
    title = "Average Normalized Degree Centrality in Green Co-Financing Network",
    subtitle = "Higher values indicate more central position in the network",
    x = "",
    y = "Average Normalized Degree",
    fill = "Geography"
  ) +
  scale_fill_manual(values = c("Chinese" = "#E41A1C", "Non-Chinese" = "#377EB8")) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.title = element_text(face = "bold"),
    axis.text.y = element_text(face = "bold")
  )
```

### Rank Changes Between Networks

We compare how institutions' centrality rankings change between the overall and green networks.

```{r rank-comparison}
# Rank lenders by degree in each network
rank_overall <- centrality_overall_full |>
  arrange(desc(degree)) |>
  mutate(rank_overall = row_number()) |>
  select(standardized_lender_name, rank_overall)

rank_green <- centrality_green_full |>
  arrange(desc(degree)) |>
  mutate(rank_green = row_number()) |>
  select(standardized_lender_name, rank_green)

# Join rankings and calculate change
rank_comparison <- rank_overall |>
  inner_join(rank_green, by = "standardized_lender_name") |>
  mutate(
    rank_change = rank_overall - rank_green,
    abs_change = abs(rank_change)
  ) |>
  arrange(desc(abs_change))

# Display institutions with major rank changes
rank_comparison |>
  filter(abs_change >= 10) |>  # Filter to major changes
  slice_head(n = 10) |>
  kable(
    caption = "Major Rank Changes Between Overall and Green Networks",
    col.names = c("Institution", "Overall Rank", "Green Rank", "Rank Change", "Absolute Change")
  ) |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed")) |>
  row_spec(which(rank_comparison$rank_change[rank_comparison$abs_change >= 10][1:10] > 0), 
           background = "#ffdddd") |>  # Worse rank in green network
  row_spec(which(rank_comparison$rank_change[rank_comparison$abs_change >= 10][1:10] < 0), 
           background = "#ddffdd")     # Better rank in green network
```

## Hydropower Co-Financing Network

As hydropower is the dominant subcategory within green projects, we analyze this specific network to understand its structure.

```{r hydro-network}
# Get the transaction IDs for hydropower projects
gcdf_data <- read_rds(
  here(
    "data",
    "transaction_classification",
    "gcdf_w_green_classifications.rds"
  )
)

transactions_w_hydro <- gcdf_data |> 
  filter(
    project_type == "Hydropower",
    co_financed == "Yes"
  ) |> 
  pull(transaction_id)

# Filter data for hydropower projects
data_for_sna_hydro <- data_for_sna |> 
  filter(transaction_id %in% transactions_w_hydro)

# Build and visualize the hydropower network
network_hydro <- build_cofinancing_network(
  data_for_sna_hydro, 
  top_n = 20, 
  min_collabs = 1
)

p_hydro <- plot_network(
  network_hydro, 
  title = "Hydropower Co-Financing Network: Top 20 Institutions",
  repel_force = 1.2
)

print(p_hydro)
```

The hydropower co-financing network shows:

1. A strong prominence of policy development banks
2. A similar bifurcated structure to the overall green network
3. A key bridging role for certain commercial banks that connect the policy and commercial clusters

## Project Composition Analysis

To better understand the underlying patterns in co-financing, we examine the composition of lenders across different project types.

```{r project-composition}
# Create a summary of lender composition per transaction
transaction_lender_summary <- data_for_sna |>
  group_by(
    transaction_id, 
    transaction_primary_class,
    recipient,
    recipient_region,
    commitment_year, 
    involving_multilateral
  ) |>
  summarise(
    total_lenders = n(),
    count_profit_maximizing = sum(lender_profit_orientation == "Profit Maximizing", na.rm = TRUE),
    count_mixed_mandate = sum(lender_profit_orientation == "Mixed Mandate", na.rm = TRUE),
    count_policy_driven = sum(lender_profit_orientation == "Policy Driven", na.rm = TRUE),
    pct_profit_maximizing = (count_profit_maximizing / total_lenders) * 100,
    pct_mixed_mandate = (count_mixed_mandate / total_lenders) * 100,
    pct_policy_driven = (count_policy_driven / total_lenders) * 100,
    dominant_lender_type = case_when(
      count_profit_maximizing > count_mixed_mandate &
      count_profit_maximizing > count_policy_driven ~ "Profit Maximizing",
      count_mixed_mandate > count_profit_maximizing &
      count_mixed_mandate > count_policy_driven ~ "Mixed Mandate",
      count_policy_driven > count_profit_maximizing &
      count_policy_driven > count_mixed_mandate ~ "Policy Driven",
      TRUE ~ "Mixed (No Clear Dominant)"
    ),
    .groups = "drop"
  )

# Compare policy-driven percentage between green and non-green projects
transaction_lender_summary |> 
  mutate(
    green_or_not = case_when(
      transaction_primary_class == "GREEN" ~ "Green Project",
      .default = "All Other Lending"
    )
  ) |> 
  ggplot(
    aes(
      x = pct_policy_driven,
      y = green_or_not,
      fill = green_or_not
    )
  ) +
  geom_boxplot() +
  geom_jitter(alpha = 0.3, width = 0, height = 0.2) +
  labs(
    title = "Percentage of Policy-Driven Lenders in Project Co-Financing",
    subtitle = "Green projects have significantly higher policy-driven lender participation",
    x = "Percentage of Policy-Driven Lenders in Transaction",
    y = "",
    fill = "Project Type"
  ) +
  scale_fill_manual(values = c("Green Project" = "#4DAF4A", "All Other Lending" = "#E41A1C")) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.title = element_text(face = "bold")
  )
```

```{r profit-maximizing-comparison}
# Compare profit-maximizing percentage between green and non-green projects
transaction_lender_summary |> 
  mutate(
    green_or_not = case_when(
      transaction_primary_class == "GREEN" ~ "Green Project",
      .default = "All Other Lending"
    )
  ) |> 
  ggplot(
    aes(
      x = pct_profit_maximizing,
      y = green_or_not,
      fill = green_or_not
    )
  ) +
  geom_boxplot() +
  geom_jitter(alpha = 0.3, width = 0, height = 0.2) +
  labs(
    title = "Percentage of Profit-Maximizing Lenders in Project Co-Financing",
    subtitle = "Green projects have significantly lower commercial lender participation",
    x = "Percentage of Profit-Maximizing Lenders in Transaction",
    y = "",
    fill = "Project Type"
  ) +
  scale_fill_manual(values = c("Green Project" = "#4DAF4A", "All Other Lending" = "#E41A1C")) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    plot.title = element_text(face = "bold")
  )
```

## Co-Financing by Project Type

Finally, we examine the extent of co-financing across different green project subtypes.

```{r cofinancing-by-project-type}
# Analyze green projects by type and co-financing status
green_projects_summary <- gcdf_data |>
  filter(primary_class == "GREEN") |>
  group_by(project_type, co_financed) |> 
  summarize(
    amount_bn = sum(amount_constant_usd_2021, na.rm = TRUE) * 1e-9,
    project_n = n(),
    .groups = "drop"
  ) |> 
  group_by(project_type) |> 
  mutate(
    category_usd_pct = amount_bn / sum(amount_bn, na.rm = TRUE) * 100,
    category_sum_bn = sum(amount_bn, na.rm = TRUE)
  ) |> 
  ungroup() |> 
  filter(!is.na(category_usd_pct)) |> 
  pivot_wider(
    names_from = co_financed,
    values_from = category_usd_pct,
    names_prefix = "pct_",
    values_fill = 0
  ) |> 
  arrange(desc(category_sum_bn))

# Display the summary
green_projects_summary |>
  mutate(
    total_bn = round(category_sum_bn, 1),
    pct_No = round(pct_No, 1),
    pct_Yes = round(pct_Yes, 1)
  ) |>
  rename(
    "Project Type" = project_type,
    "Total ($ Billion)" = total_bn,
    "% Not Co-Financed" = pct_No,
    "% Co-Financed" = pct_Yes
  ) |>
  kable(
    caption = "Co-Financing Percentage by Green Project Type"
  ) |>
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))

# Visualize co-financing by project type
green_projects_summary |>
  ggplot(
    aes(x = reorder(project_type, category_sum_bn), y = category_sum_bn, fill = pct_Yes)
  ) +
  geom_col() +
  coord_flip() +
  scale_fill_gradient(low = "#E6F5FF", high = "#0072B2") +
  labs(
    title = "Green Project Financing by Type",
    subtitle = "Color intensity shows percentage that is co-financed",
    x = "",
    y = "Total Financing ($ Billion)",
    fill = "% Co-Financed"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold"),
    axis.text.y = element_text(face = "bold")
  )
```

## Policy Implications

Our analysis reveals several important findings with significant policy implications:

1. **Bifurcated financing ecosystems**: There are distinct networks for co-financing conventional versus green projects. Green financing networks are dominated by policy-driven institutions (PDBs and MDBs), with much less involvement from profit-maximizing commercial lenders.

2. **Chinese commercial banks as bridges**: Chinese state-owned commercial banks like ICBC and Bank of China play a critical "bridging" role between policy-driven and commercial lending networks. They have the potential to channel commercial capital toward green investments.

3. **Project type differences**: Different types of green projects show varying levels of co-financing. Hydropower projects show the strongest policy bank involvement, while some newer renewable technologies have begun attracting commercial co-financing.

4. **Untapped commercial potential**: The median green project has minimal profit-maximizing co-financiers, suggesting untapped potential for commercial lender participation in the green transition.

For Chinese policymakers and development banks, these findings suggest opportunities to leverage their bridging position to mobilize commercial capital for green investments, potentially through blended finance approaches that mitigate risk for commercial partners.

## Conclusion

This network analysis provides strong evidence that green financing relies on fundamentally different institutional networks than traditional Belt and Road sectors. The dominance of policy-driven institutions in green co-financing networks suggests that China's overseas green financing has not yet made a significant pivot toward market-based mechanisms.

As China balances financial risk management with its mandates to support green overseas investments, finding ways to bridge these separate ecosystems will be crucial. Leveraging the bridging role of Chinese state-owned commercial banks could help channel more commercial capital toward green investments in developing countries, supporting both China's international climate commitments and the broader clean energy transition in the Global South.

# New

```{r}

# Create a summary dataframe for lender composition
lender_composition_summary <- transaction_lender_summary |> 
  mutate(
    green_or_not = ifelse(transaction_primary_class == "GREEN", 
                         "Green Projects", "All Other Lending")
  ) |> 
  group_by(green_or_not) |> 
  summarise(
    median_policy_driven = median(pct_policy_driven),
    median_profit_max = median(pct_profit_maximizing),
    median_mixed = median(pct_mixed_mandate),
    mean_policy_driven = mean(pct_policy_driven, na.rm = TRUE),
    mean_profit_max = mean(pct_profit_maximizing, na.rm = TRUE),
    mean_mixed = mean(pct_mixed_mandate, na.rm = TRUE),
    count = n()
  ) |> 
  ungroup()

# Convert to long format for visualization
lender_composition_long <- lender_composition_summary |>
  pivot_longer(
    cols = starts_with("mean_"),
    names_to = "lender_type",
    values_to = "percentage"
  ) |>
  mutate(
    lender_type = case_when(
      lender_type == "mean_policy_driven" ~ "Policy-Driven",
      lender_type == "mean_profit_max" ~ "Profit-Maximizing",
      lender_type == "mean_mixed" ~ "Mixed Mandate"
    )
  )

# Create a slope graph connecting green vs. other projects
ggplot(lender_composition_long, 
       aes(x = green_or_not, y = percentage, 
           group = lender_type, color = lender_type)) +
  geom_line(size = 1.5) +
  geom_point(size = 4) +
  geom_text(aes(label = paste0(round(percentage), "%")), 
            hjust = -0.3, size = 4) +
  scale_color_manual(values = c("Mixed Mandate" = "purple", 
                               "Policy-Driven" = "darkgreen", 
                               "Profit-Maximizing" = "navy")) +
  coord_flip() +
  labs(
    title = "Mean Project Composition by Lender Type",
    subtitle = "Green projects rely much more on policy-driven lenders than other projects",
    x = "",
    y = "Percentage of Lenders in Median Project",
    color = "Lender Type"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    panel.grid.minor = element_blank(),
    text = element_text(size = 12)
  )
```

```{r}
data_for_sna |> 
  filter(	
standardized_lender_name == "Standard Bank")
```

```{r}
data_for_sna |> 
  filter(	
standardized_lender_name == "Standard Bank",
transaction_primary_class == "GREEN"
)
```

```{r}
# Analyze Standard Bank's position
standard_bank_data <- data_for_sna |>
  filter(grepl("Standard Bank", standardized_lender_name)) |>
  select(transaction_id, transaction_primary_class, recipient, recipient_region)

# Get Standard Bank's connections
standard_bank_connections <- data_for_sna |>
  filter(transaction_id %in% standard_bank_data$transaction_id) |>
  group_by(transaction_id) |>
  summarize(
    collaborators = list(standardized_lender_name),
    transaction_class = first(transaction_primary_class),
    recipient = first(recipient),
    recipient_region = first(recipient_region),
    .groups = "drop"
  )

# Get Standard Bank's centrality metrics
standard_bank_metrics <- network_overall_full |>
  activate(nodes) |>
  as_tibble() |>
  filter(grepl("Standard Bank", standardized_lender_name))
```


```{r}
standard_bank_connections
```

```{r}
standard_bank_metrics
```

```{r}
# Create a summary dataframe for lender composition (using mean instead of median)
lender_composition_summary <- transaction_lender_summary |> 
  mutate(
    green_or_not = ifelse(transaction_primary_class == "GREEN", 
                         "Green Projects", "All Other Lending")
  ) |> 
  group_by(green_or_not) |> 
  summarise(
    mean_policy_driven = mean(pct_policy_driven),
    mean_profit_max = mean(pct_profit_maximizing),
    count = n()
  ) |> 
  ungroup()

# Convert to long format for visualization (dropping mixed mandate)
lender_composition_long <- lender_composition_summary |>
  pivot_longer(
    cols = c("mean_policy_driven", "mean_profit_max"),
    names_to = "lender_type",
    values_to = "percentage"
  ) |>
  mutate(
    lender_type = case_when(
      lender_type == "mean_policy_driven" ~ "Policy-Driven",
      lender_type == "mean_profit_max" ~ "Profit-Maximizing"
    )
  )

# Create an improved horizontal bar chart instead of a slope graph
ggplot(lender_composition_long, aes(x = green_or_not, y = percentage, fill = lender_type)) +
  geom_col(position = "dodge", width = 0.7) +
  geom_text(aes(label = paste0(round(percentage), "%")), 
            position = position_dodge(width = 0.7),
            vjust = -0.5, size = 4) +
  scale_fill_manual(values = c("Policy-Driven" = "#4DAF4A", 
                               "Profit-Maximizing" = "#377EB8")) +
  labs(
    title = "Average Lender Composition of Co-Financed Projects",
    subtitle = "Green projects rely primarily on policy-driven institutions",
    x = "",
    y = "Average Percentage of Lenders in Projects",
    fill = "Lender Type"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    panel.grid.minor = element_blank(),
    text = element_text(size = 12),
    axis.text.x = element_text(face = "bold", size = 12)
  ) +
  # Add annotation to highlight key insight
  annotate("segment", x = "Green Projects", y = 58, xend = "Green Projects", yend = 65,
           arrow = arrow(length = unit(0.3, "cm")), color = "darkgreen") +
  annotate("text", x = "Green Projects", y = 70,
           label = "Policy-driven lenders dominate\ngreen project financing", 
           size = 4, color = "darkgreen", hjust = 0.5)
```

# Non chinese

```{r}
# Filter to only non-Chinese lenders
non_chinese_lenders <- data_for_sna |>
  filter(lender_geography == "Non-Chinese")

# Create transaction-level summary
non_chinese_transaction_summary <- non_chinese_lenders |>
  group_by(
    transaction_id, 
    transaction_primary_class
  ) |>
  summarise(
    total_lenders = n(),
    count_profit_maximizing = sum(lender_profit_orientation == "Profit Maximizing", na.rm = TRUE),
    count_policy_driven = sum(lender_profit_orientation == "Policy Driven", na.rm = TRUE),
    pct_profit_maximizing = (count_profit_maximizing / total_lenders) * 100,
    pct_policy_driven = (count_policy_driven / total_lenders) * 100,
    .groups = "drop"
  )

# Create summary by project type
non_chinese_composition_summary <- non_chinese_transaction_summary |> 
  mutate(
    green_or_not = ifelse(transaction_primary_class == "GREEN", 
                         "Green Projects", "All Other Lending")
  ) |> 
  group_by(green_or_not) |> 
  summarise(
    mean_policy_driven = mean(pct_policy_driven, na.rm = TRUE),
    mean_profit_max = mean(pct_profit_maximizing, na.rm = TRUE),
    count = n()
  ) |> 
  ungroup()

# Convert to long format
non_chinese_composition_long <- non_chinese_composition_summary |>
  pivot_longer(
    cols = c("mean_policy_driven", "mean_profit_max"),
    names_to = "lender_type",
    values_to = "percentage"
  ) |>
  mutate(
    lender_type = case_when(
      lender_type == "mean_policy_driven" ~ "Policy-Driven",
      lender_type == "mean_profit_max" ~ "Profit-Maximizing"
    )
  )

# Create bar chart
ggplot(non_chinese_composition_long, 
       aes(x = green_or_not, y = percentage, fill = lender_type)) +
  geom_col(position = "dodge", width = 0.7) +
  geom_text(aes(label = paste0(round(percentage), "%")), 
            position = position_dodge(width = 0.7),
            vjust = -0.5, size = 4) +
  scale_fill_manual(values = c("Policy-Driven" = "#4DAF4A", 
                               "Profit-Maximizing" = "#377EB8")) +
  labs(
    title = "Average Composition of Non-Chinese Lenders in Co-Financed Projects",
    subtitle = "Green projects rely heavily on policy-driven institutions",
    x = "",
    y = "Average Percentage",
    fill = "Lender Type"
  ) +
  theme_minimal() +
  theme(
    legend.position = "bottom",
    panel.grid.minor = element_blank(),
    text = element_text(size = 12),
    axis.text.x = element_text(face = "bold", size = 12)
  ) +
  annotate("segment", x = "Green Projects", y = 65, xend = "Green Projects", yend = 72,
           arrow = arrow(length = unit(0.3, "cm")), color = "darkgreen") +
  annotate("text", x = "Green Projects", y = 78,
           label = "Non-Chinese policy banks dominate\ngreen project co-financing", 
           size = 4, color = "darkgreen", hjust = 0.5)
```


```{r}
# Analyze PBOC's transactions
pboc_data <- data_for_sna |>
  filter(standardized_lender_name == "People's Bank of China")

# Count by transaction class
pboc_transaction_count <- pboc_data |>
  count(transaction_primary_class)

# Get PBOC's co-financing partners
pboc_partners <- data_for_sna |>
  filter(transaction_id %in% pboc_data$transaction_id) |>
  filter(standardized_lender_name != "People's Bank of China") |>
  count(standardized_lender_name, sort = TRUE)

# Get PBOC's network position
pboc_green_metrics <- network_green_full |>
  activate(nodes) |>
  as_tibble() |>
  filter(standardized_lender_name == "People's Bank of China")
```


```{r}
pboc_green_metrics |> glimpse()
```

```{r}
pboc_partners
```

