---
title: "SNA Round 2"
author: "Teal Emery"
format: html
editor: visual
---


# Setup

```{r}
#| message: false
library(tidyverse)   # For data manipulation
library(tidygraph)   # For network objects and centrality measures
library(ggraph)      # For network visualizations
library(here)        # Relative paths 
library(ggrepel)     # Repelled text labels
library(igraph)      # Network analysis
library(patchwork)   # For combining plots
library(scales)      # For formatting numbers

# Set options
options(scipen = 999)  # Avoid scientific notation
theme_set(theme_minimal())
```

# Data

```{r}
sna_data_nested <- read_rds(here("data", "social_network_analysis", "data_for_social_network_analysis.rds"))
data_for_sna <- sna_data_nested |> 
  unnest(unique_lenders) |> 
  unique()

sna_data_nested 

# Also load transaction classification data for project type information
gcdf_data <- read_rds(here("data", "transaction_classification", "gcdf_w_green_classifications.rds"))

gcdf_data
```

# Create Core Network Analysis Functions

```{r}
# =========================================================================
# 2. NETWORK ANALYSIS FUNCTIONS
# =========================================================================

#' Build Co-financing Network
#' 
#' Creates a network graph from co-financing data with calculated centrality measures
#' 
#' @param data Processed dataset
#' @param transaction_class Optional filter for specific transaction class (e.g., "GREEN")
#' @param top_n Number of top nodes by degree to retain for visualization
#' @param min_collabs Minimum number of collaborations required to keep an edge
#' @return A tidygraph object with nodes and edges
build_cofinancing_network <- function(data, transaction_class = NULL, top_n = 50, min_collabs = 2) {
  
  # Filter data if transaction class specified
  if (!is.null(transaction_class)) {
    data <- data |> filter(transaction_primary_class == transaction_class)
  }
  
  # Create edge list
  edges <- data |>
    select(transaction_id, standardized_lender_name) |>
    distinct() |>
    group_by(transaction_id) |>
    # Only consider transactions with at least 2 lenders
    filter(n() >= 2) |>
    summarise(
      pairs = list(combn(standardized_lender_name, 2, simplify = FALSE)),
      .groups = "drop"
    ) |>
    unnest(pairs) |>
    mutate(
      from = map_chr(pairs, 1),
      to   = map_chr(pairs, 2)
    ) |>
    select(from, to) |>
    # Ensure undirected edges by sorting alphabetically
    mutate(
      from = pmin(from, to),
      to   = pmax(from, to)
    ) |>
    group_by(from, to) |>
    summarise(weight = n(), .groups = "drop")
  
  # Build nodes table
  nodes <- data |>
    distinct(standardized_lender_name, lender_geography, lender_core_type, lender_profit_orientation)
  
  # Create graph
  graph <- tbl_graph(nodes = nodes, edges = edges, directed = FALSE)
  
  # Compute centrality measures
  graph <- graph |>
    mutate(
      degree = centrality_degree(),
      betweenness = centrality_betweenness(),
      closeness = centrality_closeness()
    )
  
  # Add constraint (measure of brokerage from Joosse et al. 2024)
  graph_igraph <- as.igraph(graph)
  V(graph_igraph)$constraint <- constraint(graph_igraph)
  
  # Add normalized centrality measures
  graph <- graph |>
    activate(nodes) |>
    mutate(
      constraint = V(graph_igraph)$constraint,
      norm_degree = degree / (n() - 1),  # Normalize by max possible connections
      norm_betweenness = betweenness / max(betweenness, na.rm = TRUE)  # Normalize by max value
    )
  
  # For visualization, filter to top nodes
  if (!is.null(top_n)) {
    top_nodes <- graph |>
      activate(nodes) |>
      as_tibble() |>
      arrange(desc(degree)) |>
      slice_head(n = top_n) |>
      pull(standardized_lender_name)
    
    graph <- graph |>
      activate(nodes) |>
      filter(standardized_lender_name %in% top_nodes) |>
      activate(edges) |>
      filter(from %in% top_nodes & to %in% top_nodes) |>
      filter(weight >= min_collabs)
  }
  
  return(graph)
}

#' Plot Network Visualization
#' 
#' Creates a publication-quality visualization of a co-financing network
#' 
#' @param graph A tidygraph network object
#' @param title Plot title
#' @param subtitle Optional subtitle
#' @param node_size_range Size range for nodes
#' @param edge_width_range Width range for edges
#' @param seed Random seed for layout reproducibility
#' @return A ggplot object
plot_network <- function(graph, 
                        title = "Co-Financing Network",
                        subtitle = NULL,
                        node_size_range = c(3, 12),
                        edge_width_range = c(0.5, 3),
                        seed = 123) {
  
  # Set seed for reproducible layout
  set.seed(seed)
  
  # Create label for coloring nodes
  graph <- graph |>
    activate(nodes) |>
    mutate(
      lender_color_label = case_when(
        lender_geography == "Chinese" ~ "Chinese",
        lender_geography == "Non-Chinese" & lender_profit_orientation == "Profit Maximizing" ~ 
          "Non-Chinese: Profit Maximizing",
        lender_geography == "Non-Chinese" & lender_profit_orientation == "Mixed Mandate" ~ 
          "Non-Chinese: Mixed Mandate",
        lender_geography == "Non-Chinese" & lender_profit_orientation == "Policy Driven" ~ 
          "Non-Chinese: Policy Driven",
        TRUE ~ "Other"
      )
    )
  
  # Define color and shape mappings
  color_values <- c(
    "Chinese" = "#E41A1C",  # Red
    "Non-Chinese: Profit Maximizing" = "#377EB8",  # Blue
    "Non-Chinese: Mixed Mandate" = "#984EA3",  # Purple
    "Non-Chinese: Policy Driven" = "#4DAF4A",  # Green
    "Other" = "gray50"
  )
  
  shape_values <- c(
    "Profit Maximizing" = 16,  # Circle
    "Mixed Mandate" = 17,  # Triangle
    "Policy Driven" = 18,  # Diamond
    "Uncategorized" = 15   # Square (fallback)
  )
  
  # Create the plot
  p <- ggraph(graph, layout = "fr") +
    # Edges
    geom_edge_link(
      aes(width = weight, alpha = weight),
      color = "gray70",
      show.legend = FALSE
    ) +
    scale_edge_width_continuous(range = edge_width_range) +
    scale_edge_alpha_continuous(range = c(0.3, 0.8)) +
    
    # Nodes
    geom_node_point(
      aes(
        color = lender_color_label,
        shape = lender_profit_orientation,
        size = degree
      )
    ) +
    scale_color_manual(values = color_values, name = "Lender (Geography & Profit Orientation)") +
    scale_shape_manual(values = shape_values, name = "Profit Orientation") +
    scale_size_continuous(range = node_size_range, name = "Degree") +
    
    # Labels
    geom_node_text(
      aes(label = standardized_lender_name),
      repel = TRUE,
      size = 3,
      fontface = "plain",
      max.overlaps = 15
    ) +
    
    # Styling
    labs(
      title = title,
      subtitle = subtitle
    ) +
    theme_void() +
    theme(
      plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
      plot.subtitle = element_text(size = 12, hjust = 0.5),
      legend.position = "right",
      legend.box = "vertical",
      legend.title = element_text(face = "bold")
    )
  
  return(p)
}
```

# Create the main network analysis
```{r}
# =========================================================================
# 3. MAIN NETWORK ANALYSIS
# =========================================================================

# Build complete networks for analysis
network_overall_full <- build_cofinancing_network(data_for_sna, 
                                                  top_n = NULL, 
                                                  min_collabs = 1)

network_green_full <- build_cofinancing_network(data_for_sna, 
                                            transaction_class = "GREEN", 
                                            top_n = NULL, 
                                            min_collabs = 1)

# Build networks for visualization (top 20 nodes)
network_overall_viz <- build_cofinancing_network(data_for_sna, 
                                                 top_n = 20, 
                                                 min_collabs = 1)
network_green_viz <- build_cofinancing_network(data_for_sna, 
                                           transaction_class = "GREEN", 
                                           top_n = 20, 
                                           min_collabs = 1)

# Create visualizations
p_overall <- plot_network(
  network_overall_viz, 
  title = "Syndicated Lending Networks: Top 20 Banks",
  subtitle = "Size represents degree centrality; edge width represents frequency of co-financing"
)

p_green <- plot_network(
  network_green_viz, 
  title = "Key Network Financiers in Green Co-financing: Top 20 Banks",
  subtitle = "Size represents degree centrality; edge width represents frequency of co-financing"
)

# Extract centrality data for full networks
centrality_overall <- network_overall_full |>
  activate(nodes) |>
  as_tibble() |>
  select(standardized_lender_name, lender_geography, lender_profit_orientation,
         degree, betweenness, closeness, constraint, norm_degree, norm_betweenness)

centrality_green <- network_green_full |>
  activate(nodes) |>
  as_tibble() |>
  select(standardized_lender_name, lender_geography, lender_profit_orientation,
         degree, betweenness, closeness, constraint, norm_degree, norm_betweenness)

# Top lenders by degree in each network
top_lenders_overall <- centrality_overall |>
  arrange(desc(degree)) |>
  slice_head(n = 20) |>
  mutate(rank = row_number())

top_lenders_green <- centrality_green |>
  arrange(desc(degree)) |>
  slice_head(n = 20) |>
  mutate(rank = row_number())
```


# Investigate PBOC and IDB in Green Network

```{r}
# =========================================================================
# 4. INVESTIGATE PBOC AND IDB IN GREEN NETWORK
# =========================================================================

# Check PBOC's position in green network
pboc_green <- centrality_green |>
  filter(standardized_lender_name %in% c("People's Bank of China", "PBoC")) |>
  select(standardized_lender_name, degree, norm_degree, betweenness, norm_betweenness, constraint)

# Check IDB's position in green network
idb_green <- centrality_green |>
  filter(standardized_lender_name %in% c("Inter-American Development Bank", 
                                        "Inter American Development Bank")) |>
  select(standardized_lender_name, degree, norm_degree, betweenness, norm_betweenness, constraint)

# Find transactions involving PBOC in green network
pboc_transactions <- data_for_sna |> 
  filter(
    transaction_primary_class == "GREEN",
    standardized_lender_name %in% c("People's Bank of China", "PBoC")
  ) |>
  select(transaction_id) |>
  distinct()

# Find who co-finances with PBOC in green projects
pboc_partners <- data_for_sna |>
  filter(transaction_id %in% pboc_transactions$transaction_id) |>
  filter(!standardized_lender_name %in% c("People's Bank of China", "PBoC")) |>
  count(standardized_lender_name, sort = TRUE)

# Calculate PBOC's co-financing concentration
pboc_concentration <- pboc_partners |>
  mutate(pct = n / sum(n) * 100) |>
  arrange(desc(pct))

# Compare with overall partners distribution
all_green_partners <- data_for_sna |>
  filter(transaction_primary_class == "GREEN") |>
  group_by(standardized_lender_name) |>
  summarize(
    unique_transactions = n_distinct(transaction_id),
    unique_partners = n_distinct(transaction_id)
  ) |>
  arrange(desc(unique_partners))
```
fix last one

# Lender Type Analysis By Network


```{r}
# =========================================================================
# 5. LENDER TYPE ANALYSIS BY NETWORK
# =========================================================================

# Summarize lender types in overall vs. green networks
lender_type_summary <- bind_rows(
  centrality_overall |> 
    mutate(network = "Overall") |>
    select(standardized_lender_name, lender_geography, lender_profit_orientation, network),
  
  centrality_green |> 
    mutate(network = "Green") |>
    select(standardized_lender_name, lender_geography, lender_profit_orientation, network)
) |>
  group_by(network, lender_geography, lender_profit_orientation) |>
  summarize(
    count = n(),
    .groups = "drop"
  ) |>
  group_by(network) |>
  mutate(
    percent = count / sum(count) * 100
  )

# Create lender type composition plot
p_lender_composition <- lender_type_summary |>
  mutate(
    lender_category = paste(lender_geography, lender_profit_orientation, sep = ": ")
  ) |>
  ggplot(aes(x = network, y = percent, fill = lender_category)) +
  geom_col(position = "stack") +
  scale_fill_manual(
    values = c(
      "Chinese: Mixed Mandate" = "#E41A1C",
      "Chinese: Policy Driven" = "#E67F83",
      "Non-Chinese: Profit Maximizing" = "#377EB8",
      "Non-Chinese: Mixed Mandate" = "#984EA3",
      "Non-Chinese: Policy Driven" = "#4DAF4A"
    )
  ) +
  labs(
    title = "Composition of Lender Types in Co-financing Networks",
    x = "Network",
    y = "Percentage of Lenders",
    fill = "Lender Category"
  ) +
  theme_minimal() +
  theme(
    legend.position = "right",
    axis.text.x = element_text(face = "bold")
  )

# Compare centrality by lender type
centrality_by_type <- bind_rows(
  centrality_overall |> mutate(network = "Overall"),
  centrality_green |> mutate(network = "Green")
) |>
  group_by(network, lender_geography, lender_profit_orientation) |>
  summarize(
    count = n(),
    avg_norm_degree = mean(norm_degree, na.rm = TRUE),
    avg_norm_betweenness = mean(norm_betweenness, na.rm = TRUE),
    avg_constraint = mean(constraint, na.rm = TRUE),
    .groups = "drop"
  )

# Most active banks by number of transactions (for Figure 8)
most_active_banks <- data_for_sna |>
  count(standardized_lender_name, sort = TRUE) |>
  slice_head(n = 20) |>
  mutate(
    standardized_lender_name = fct_reorder(standardized_lender_name, n)
  )

p_most_active <- most_active_banks |>
  ggplot(aes(x = n, y = standardized_lender_name)) +
  geom_col(fill = "steelblue") +
  labs(
    title = "Most Active Banks in Syndication",
    subtitle = "By number of transactions",
    x = "Number of Transactions",
    y = NULL
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(face = "bold"),
    panel.grid.major.y = element_blank()
  )
```

# Round 2

```{r}
plot_network <- function(graph, 
                        title = "Co-Financing Network",
                        subtitle = NULL,
                        node_size_range = c(3, 12),
                        edge_width_range = c(0.5, 4),  # Increased max width
                        layout = "fr",
                        seed = 123) {
  
  # Set seed for reproducible layout
  set.seed(seed)
  
  # Create label for coloring nodes
  graph <- graph |>
    activate(nodes) |>
    mutate(
      lender_color_label = case_when(
        lender_geography == "Chinese" ~ "Chinese",
        lender_geography == "Non-Chinese" & lender_profit_orientation == "Profit Maximizing" ~ 
          "Non-Chinese: Profit Maximizing",
        lender_geography == "Non-Chinese" & lender_profit_orientation == "Mixed Mandate" ~ 
          "Non-Chinese: Mixed Mandate",
        lender_geography == "Non-Chinese" & lender_profit_orientation == "Policy Driven" ~ 
          "Non-Chinese: Policy Driven",
        TRUE ~ "Other"
      )
    )
  
  # Define color and shape mappings
  color_values <- c(
    "Chinese" = "#E41A1C",  # Red
    "Non-Chinese: Profit Maximizing" = "#377EB8",  # Blue
    "Non-Chinese: Mixed Mandate" = "#984EA3",  # Purple
    "Non-Chinese: Policy Driven" = "#4DAF4A",  # Green
    "Other" = "gray50"
  )
  
  shape_values <- c(
    "Profit Maximizing" = 16,  # Circle
    "Mixed Mandate" = 17,  # Triangle
    "Policy Driven" = 18,  # Diamond
    "Uncategorized" = 15   # Square (fallback)
  )
  
  # Create the plot - DRAW EDGES FIRST so they appear behind nodes
  p <- ggraph(graph, layout = layout) +  # Use the layout parameter
    # IMPORTANT: Make edges more visible and draw first
    geom_edge_link(
      aes(width = weight),
      color = "gray50",    # Darker gray
      alpha = 0.8,         # Higher opacity
      show.legend = TRUE
    ) +
    scale_edge_width_continuous(
      range = edge_width_range,
      name = "Collaboration Frequency"
    ) +
    
    # Nodes
    geom_node_point(
      aes(
        color = lender_color_label,
        shape = lender_profit_orientation,
        size = degree
      )
    ) +
    scale_color_manual(values = color_values, name = "Lender (Geography & Profit Orientation)") +
    scale_shape_manual(values = shape_values, name = "Profit Orientation") +
    scale_size_continuous(range = node_size_range, name = "Degree") +
    
    # Labels
    geom_node_text(
      aes(label = standardized_lender_name),
      repel = TRUE,
      size = 3,
      fontface = "plain",
      max.overlaps = 15
    ) +
    
    # Styling
    labs(
      title = title,
      subtitle = subtitle
    ) +
    theme_void() +
    theme(
      plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
      plot.subtitle = element_text(size = 12, hjust = 0.5),
      legend.position = "right",
      legend.box = "vertical",
      legend.title = element_text(face = "bold")
    )
  
  return(p)
}
```


```{r}
# For the green network visualization, use a layout that better shows clusters
p_green <- plot_network(
  network_green_viz, 
  title = "Key Network Financiers in Green Co-financing: Top 20 Banks",
  subtitle = "Size represents degree centrality; edge width represents frequency of co-financing",
  seed = 456  # Different seed to get a better separation
 )  #+ 
  # ggraph::with_graph(network_green_viz, ggraph::create_layout(as.igraph(network_green_viz), layout = "kk"))

p_green
```

# Ex Hydro

```{r}
# First, create data for green ex-hydro
hydropower_transactions <- gcdf_data |>
  filter(project_type == "Hydropower") |>
  pull(transaction_id)

data_for_sna_green_ex_hydro <- data_for_sna |>
  filter(
    transaction_primary_class == "GREEN",
    !transaction_id %in% hydropower_transactions
  )

# Build network for green ex-hydro
network_green_ex_hydro_full <- build_cofinancing_network(
  data_for_sna_green_ex_hydro, 
  top_n = NULL, 
  min_collabs = 1
)

# Extract centrality data for green ex-hydro
centrality_green_ex_hydro <- network_green_ex_hydro_full |>
  activate(nodes) |>
  as_tibble() |>
  select(standardized_lender_name, lender_geography, lender_profit_orientation,
         degree, betweenness, closeness, constraint, norm_degree, norm_betweenness) |>
  mutate(network = "Green (ex-Hydro)")

# Focus on non-Chinese co-financiers comparison
non_chinese_cofinancier_comparison <- bind_rows(
  centrality_overall |> 
    filter(lender_geography == "Non-Chinese") |>
    mutate(network = "Overall"),
  
  centrality_green |> 
    filter(lender_geography == "Non-Chinese") |>
    mutate(network = "Green"),
  
  centrality_green_ex_hydro |>
    filter(lender_geography == "Non-Chinese")
) |>
  group_by(network, lender_profit_orientation) |>
  summarize(
    count = n(),
    .groups = "drop"
  ) |>
  group_by(network) |>
  mutate(
    percent = count / sum(count) * 100
  ) |>
  # Order networks logically
  mutate(network = factor(network, levels = c("Overall", "Green", "Green (ex-Hydro)")))

# Create a side-by-side bar chart
p_non_chinese_cofinanciers <- ggplot(
  non_chinese_cofinancier_comparison,
  aes(x = network, y = percent, fill = lender_profit_orientation)
) +
  geom_col(position = "dodge", width = 0.7) +
  geom_text(
    aes(label = sprintf("%.1f%%", percent)),
    position = position_dodge(width = 0.7),
    vjust = -0.5,
    size = 3.5
  ) +
  scale_fill_manual(
    values = c(
      "Profit Maximizing" = "#377EB8",
      "Mixed Mandate" = "#984EA3",
      "Policy Driven" = "#4DAF4A"
    )
  ) +
  labs(
    title = "Composition of Non-Chinese Co-financiers in Chinese Overseas Lending",
    subtitle = "Profit-driven vs. policy-driven institutional breakdown",
    x = NULL,
    y = "Percentage of Non-Chinese Co-financiers",
    fill = "Lender Type"
  ) +
  theme_minimal() +
  theme(
    legend.position = "right",
    axis.text.x = element_text(face = "bold"),
    panel.grid.major.x = element_blank(),
    plot.title = element_text(size = 14, face = "bold"),
    plot.subtitle = element_text(size = 12)
  ) +
  ylim(0, max(non_chinese_cofinancier_comparison$percent) * 1.1)  # Add space for text labels
```


```{r}
# Analyze PBOC's role in green financing
pboc_green_transactions <- data_for_sna |>
  filter(
    transaction_primary_class == "GREEN",
    standardized_lender_name %in% c("People's Bank of China", "PBoC")
  ) |>
  pull(transaction_id) |>
  unique()

# Count PBOC green transactions by institution type
pboc_partners_by_type <- data_for_sna |>
  filter(
    transaction_id %in% pboc_green_transactions,
    !standardized_lender_name %in% c("People's Bank of China", "PBoC")
  ) |>
  group_by(lender_profit_orientation) |>
  summarize(
    num_transactions = n(),
    pct = n() / sum(n()) * 100,
    .groups = "drop"
  )

# Find most frequent partners of PBOC in green financing
pboc_top_partners <- data_for_sna |>
  filter(
    transaction_id %in% pboc_green_transactions,
    !standardized_lender_name %in% c("People's Bank of China", "PBoC")
  ) |>
  count(standardized_lender_name, sort = TRUE) |>
  mutate(pct = n / sum(n) * 100) |>
  slice_head(n = 5)

# Calculate financing concentration
pboc_partner_concentration <- nrow(pboc_top_partners |> filter(pct >= 10)) / nrow(pboc_top_partners)
```

